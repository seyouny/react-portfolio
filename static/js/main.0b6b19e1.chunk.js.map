{"version":3,"sources":["components/card/index.js","components/nav/navbar.js","components/footer/index.js","pages/projects.js","pages/resume.js","pages/main.js","App.js","serviceWorker.js","index.js"],"names":["Project","props","Col","xs","md","Card","className","style","width","Img","variant","src","image","Body","Title","title","Text","description","Link","href","link","Navb","Navbar","bg","Brand","Nav","Footer","Row","Projects","projects","this","map","proj","React","Component","Resume","download","Main","Jumbotron","fluid","Container","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b6b19e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from 'react-bootstrap/Col'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\n\r\nexport default function Project(props) {\r\n    return <Col xs={6} md={4}>\r\n    <Card className=\"mx-auto\" style={{ width: '20rem' }}>\r\n    <Card.Img variant=\"top\" src={props.image} />\r\n    <Card.Body>\r\n      <Card.Title>{props.title}</Card.Title>\r\n      <Card.Text>\r\n        {props.description}\r\n      </Card.Text>\r\n      <Card.Link href={props.link}>{props.title}</Card.Link>\r\n    </Card.Body>\r\n  </Card>\r\n  </Col>\r\n}","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\nexport default function Navb() {\r\n    return (    \r\n    <Navbar bg=\"light\" variant=\"light\">\r\n    <Navbar.Brand href=\"#\">Stacey</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#project\">Projects</Nav.Link>\r\n        <Nav.Link href=\"#resume\">Resume</Nav.Link>\r\n        <Nav.Link href=\"https://www.linkedin.com/in/seyouny\">LinkedIn</Nav.Link>\r\n    </Nav>\r\n    \r\n</Navbar>)\r\n\r\n}","import React from \"react\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport \"./style.css\"\r\n\r\nexport default function Footer(props) {\r\n    return <footer>\r\n        <Row>\r\n            <Col xs={6} md={4}>\r\n                Links:\r\n                <div>\r\n                    <a href=\"https://github.com/seyouny/\">GitHub</a>\r\n                </div>\r\n                <div>\r\n                    <a href=\"https://open.spotify.com/user/227bsiwrdgp27psbpe3kzf2sa?si=HdeQaJ7RSxSKHsZNCKKtCg\">Spotify</a>\r\n                </div>\r\n\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n                Email: \r\n                <div>\r\n                    <a href=\"stacey.exp@gmail.com\">stacey.exp@gmail.com</a>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    </footer>\r\n}","import React from 'react';\r\nimport Project from \"../components/card\"\r\nimport Navb from \"../components/nav/navbar\"\r\nimport Row from 'react-bootstrap/Row'\r\nimport Footer from \"../components/footer\"\r\n\r\n\r\n// import './App.css';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\n\r\nclass Projects extends React.Component {\r\n    projects = [\r\n        {\r\n            title: \"Middle Ground\",\r\n            image: \"./assets/img/middle.png\",\r\n            description: \" Middle|Ground aims to shine a light on the imbalanced and sometimes inaccurate news we receive through social media which inform our opinions, to promote greater perspective and dialogue about issues of social importance.\",\r\n            link: \"https://github.com/seyouny/Middleground\"\r\n        },\r\n        {\r\n            title: \"Work&Balance\",\r\n            image: \"./assets/img/workbalance.png\",\r\n            description: \" Work&Balance was a collaborative project that featured the use of GitHub Jobs API and Google Places API. The purpose of this website is to provide a job search engine that also provides a glimpse of what your everyday workday breaks might look like. Recruiters and networkers alike may use this website to identify appropriate places to have meetings.\",\r\n            link: \"https://github.com/seyouny/JobSearchEateries\"\r\n        },\r\n        {\r\n            title: \"Book Search\",\r\n            image: \"./assets/img/middle.png\",\r\n            description: \"Using React, NodeJS, and Google Book Search API, this is a webpage that searches for and populates specific books. Users are given the option of saving each book. \",\r\n            link: \"https://github.com/seyouny/booksearch\"\r\n        },\r\n        {\r\n            title: \"COD: Stats Dashboard\",\r\n            image: \"./assets/img/middle.png\",\r\n            description: \"Emphasizing the competitive nature of multiplayer video games, this dashboard allows Call of Duty users to connect and compare their stats with their friends.\",\r\n            link: \"https://github.com/seyouny/statsdash\"\r\n        },\r\n        {\r\n            title: \"Full-Stack Portfolio\",\r\n            image: \"./assets/img/middle.png\",\r\n            description: \"Another portfolio built with NodeJS. This portfolio displays a full-stack usage with a client-side and server-side implemented.\",\r\n            link: \"https://github.com/seyouny/portfolio\"\r\n        },\r\n        {\r\n            title: \"Password Generator\",\r\n            image: \"./assets/img/middle.png\",\r\n            description: \"Randomly generates a password based on user criteria. Display onto screen after selections are made.\",\r\n            link: \"https://github.com/seyouny/passwordgenerator\"\r\n        }\r\n    ]\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navb/>\r\n                <Row>\r\n                {this.projects.map((proj)=>{\r\n                    return <Project\r\n                    title = {proj.title}\r\n                    image = {proj.image}\r\n                    description = {proj.description}\r\n                    link = {proj.link}\r\n                    />\r\n                })}\r\n                </Row>\r\n                <Footer/>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport Project from \"../components/card\"\r\nimport Navb from \"../components/nav/navbar\"\r\nimport Footer from \"../components/footer\"\r\n// import resume from \".assets/img\"\r\nimport \"./style.css\"\r\n\r\n\r\n// import './App.css';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\n\r\nclass Resume extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navb />\r\n\r\n            <div className=\"resume\">\r\n                <h1>Resume</h1>\r\n                <hr></hr>\r\n                <h3>Education</h3>\r\n                <h5>UC Berkeley Extension - AUGUST 2020</h5>\r\n                <h6>Full-Stack Development </h6>\r\n                <br/>\r\n                    <h5>University of California, Irvine - JUNE 2020</h5>\r\n                    <h6>Bachelors of Science, Chemistry</h6>\r\n                <br></br>\r\n                    <h3>Skills</h3>\r\n                    <br/>\r\n                        <ul>\r\n                            <li>Javascript</li>\r\n                            <li>HTML (+CSS)</li>\r\n                            <li>Python</li>\r\n                            <li>Node.js</li>\r\n                            <li>Express.js</li>\r\n                            <li>MySQL</li>\r\n                            </ul>\r\n                            <a href=\"../images/Stacey_Yoon_Resume.pdf\" download><img src=\"#\"></img>Click Here for download</a>\r\n            </div>\r\n         <Footer />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\r\nimport Project from \"../components/card\"\r\nimport Navb from \"../components/nav/navbar\"\r\nimport Footer from \"../components/footer\"\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\n\r\n// import './App.css';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navb />\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>Hey Stacey here.</h1>\r\n                        <p>\r\n                            Images are currently broken, but all the links are working. Feel free to browse.\r\n    </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n                <Footer />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Projects from \"./pages/projects\"\nimport Resume from \"./pages/resume\"\nimport Main from \"./pages/main\"\n\nimport './App.css';\n// import \"./components/card/node_modules/react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n         {/* <Route path={process.env.PUBLIC_URL} components={Main}/> */}\n          <Route exact path=\"/#\" component={Main}/>\n          <Route exact path=\"/#project\" component={Projects}/>\n          <Route exact path=\"/#resume\" component={Resume}/>\n        </Switch>\n       \n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}